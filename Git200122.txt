Git 开源分布式版本控制系统，敏捷高效地处理任何或小或大的项目。Linus Torvalds 为帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。

git init 初始化本地Git仓库（创建新仓库），生成 .git 目录内含资源的所有元数据（Git 需要的数据和资源），其他项目目录保持不变。默认会创建master分支。
git init newrepo使用指定目录作为Git仓库

将当前目录下某些文件纳入版本控制，提交到仓库中。
git add 对文件进行跟踪（添加文件到暂存区）
git add *.c
git add README
git commit -m 提交，'初始化项目版本'，将暂存区内容添加到本地仓库。
git commit -a（git add当前目录下所有文件+git commit）

git clone从远程仓库拷贝项目（类似 svn checkout）
git clone <repo> 克隆远程仓库
git clone <repo> <directory>克隆到指定本地目录

git config --list 显示当前git配置信息
git config -e 编辑当前仓库配置文件
git config -e --global 编辑系统上所有仓库配置文件

git config --global user.name "runoob" 设置提交代码时的用户信息
git config --global user.email test@runoob.com

git status	查看仓库当前状态，显示有变更的文件。-s简短的
git diff	比较文件的不同，即暂存区和工作区的差异。
git reset	回退版本。
git rm	删除工作区文件。
git mv	移动或重命名工作区文件。
git log	查看历史提交记录
git blame <file>	以列表形式查看指定文件的历史修改记录
git remote	远程仓库操作
git push	上传远程代码并合并
git pull	下载远程代码并合并
git fetch	从远程获取代码库，不自动合并


workspace：工作区
staging area：暂存区/缓存区（索引）
local repository：或本地仓库
remote repository：远程仓库
w → add → s → commit → l → push → r
w ← checkout ← s ← reset ← l ← fetch/clone ← r
w ← pull ← r


用分支切分工作，在不同开发环境中做事，并来回切换。
git branch 列出本地分支。* master有个叫master的分支，且是当前分支。
git branch (branchname) 创建分支
git branch -d (branchname)删除分支
git checkout (branchname)切换分支，用该分支最后提交的快照替换工作目录内容，多分支无需多目录。
git checkout -b (branchname) 新建分支并切入。
git merge 将任何分支合并到当前分支
git merge -b  将 b 分支合并到当前分支


git log - 查看历史提交记录。
--oneline 选项查看历史记录简洁版本。
--graph 选项，查看历史中什么时候出现了分支、合并。
--reverse 参数逆向显示所有日志。
--author只查找指定用户的提交日志(--author=Linus --oneline -5)
--since --before --until --after选项指定日期(--oneline --before={3.weeks.ago} --   after={2010-04-18} --no-merges)
--decorate可看标签
git log命令可查看：http://git-scm.com/docs/git-log
git blame <file> - 以列表形式查看指定文件的历史修改记录。


标签是版本库的快照。是指向某个 commit 的指针（跟分支很像，分支可移动，标签不能），所以创建和删除标签都是瞬间完成的。tag是易记有意义的名字，跟某个commit绑在一起。
标签类型：轻量级的（lightweight）和含附注的（annotated）。
轻量级标签是指向特定提交对象的引用。含附注标签是存在仓库中的独立对象，有自身的校验和信息，含标签名，电邮地址和日期，及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。
git tag -a v1.0 -a 选项创建带注解的标签
git tag -a v0.9 85fc7e7 追加标签
git tag查看所有标签
指定标签信息命令：git tag -a <tagname> -m "runoob.com标签"
PGP签名标签命令：git tag -s <tagname> -m "runoob.com标签"
git tag -d v1.1  删标签
git show v1.0查看此版本修改的内容



ssh-keygen -t rsa -C "注册邮箱"
密钥存放位置.ssh
cat id_rsa.pub 复制公钥
ssh -T git@github.com
Hi XXX! You've successfully authenticated, but GitHub does not provide shell access.表示连接成功。